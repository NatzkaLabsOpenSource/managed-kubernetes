apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: native-gke
  labels:
    crossplane.io/xrd: xmanagedclusters.compositions.io
    provider: native
    cluster: gke
spec:
  compositeTypeRef:
    apiVersion: compositions.io/v1alpha1
    kind: XManagedCluster
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  - name: region
    patches:
    - fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
      transforms:
      - type: map
        map:
          use1: us-east4
          use2: us-east1
          usw1: us-west2
          usw2: us-west1
          cac: northamerica-northeast1
          sae: southamerica-east1
          afs: asia-east1
          euc: europe-west3
          euw1: europe-west4
          euw2: europe-west2
          euw3: europe-west1
          eus: europe-west6
          eun: europe-north1
          ape: asia-east2
          aps1: asia-south1
          apne1: asia-northeast1
          apne2: asia-northeast3
          apne3: asia-northeast2
          apse1: asia-southeast1
          apse2: australia-southeast1
          apse3: asia-southeast2
  - name: location
    patches:
    - fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
      transforms:
      - type: map
        map:
          use1: us-east4
          use2: us-east1
          usw1: us-west2
          usw2: us-west1
          cac: northamerica-northeast1
          sae: southamerica-east1
          afs: asia-east1
          euc: europe-west3
          euw1: europe-west4
          euw2: europe-west2
          euw3: europe-west1
          eus: europe-west6
          eun: europe-north1
          ape: asia-east2
          aps1: asia-south1
          apne1: asia-northeast1
          apne2: asia-northeast3
          apne3: asia-northeast2
          apse1: asia-southeast1
          apse2: australia-southeast1
          apse3: asia-southeast2

  resources:
  - name: compute-net
    base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Network
      spec:
        forProvider:
          autoCreateSubnetworks: false
          routingConfig:
            routingMode: REGIONAL
        providerConfigRef:
          name: gcp-xp-provider
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "vnet-%s"

  - name: compute-subnet
    base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Subnetwork
      spec:
        forProvider:
          networkSelector:
            matchControllerRef: true
          privateIpGoogleAccess: true
          ipCidrRange: 192.168.0.0/24
          secondaryIpRanges:
          - rangeName: pods
            ipCidrRange: 10.1.0.0/20
          - rangeName: services
            ipCidrRange: 172.16.0.0/16
        providerConfigRef:
          name: gcp-xp-provider
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: region
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "snet-%s"

  - name: gkecluster
    base:
      apiVersion: container.gcp.crossplane.io/v1beta2
      kind: Cluster
      spec:
        forProvider:
          addonsConfig:
            gcePersistentDiskCsiDriverConfig:
              enabled: true
            networkPolicyConfig:
              disabled: false
          ipAllocationPolicy:
            clusterSecondaryRangeName: pods
            createSubnetwork: false
            servicesSecondaryRangeName: services
            useIpAliases: true
          loggingService: logging.googleapis.com/kubernetes
          masterAuth:
            username:
          masterAuthorizedNetworksConfig:
            enabled: false
          monitoringService: monitoring.googleapis.com/kubernetes
          networkPolicy:
            enabled: true
          networkSelector:
            matchControllerRef: true
          networkConfig:
            enableIntraNodeVisibility: true
          subnetworkSelector:
            matchControllerRef: true
        writeConnectionSecretToRef:
          namespace: crossplane-system
        providerConfigRef:
          name: gcp-xp-provider
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: location
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "cluster-%s"
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: status.clusterName
    - fromFieldPath: spec.parameters.version
      toFieldPath: spec.forProvider.initialClusterVersion
    - fromFieldPath: spec.id
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-gkecluster"
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.controlPlaneStatus
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: status.fargateProfileStatus
      transforms:
      - type: string
        string:
          fmt: "NA4-%s"
    connectionDetails:
    - fromConnectionSecretKey: kubeconfig
    readinessChecks:
    - type: MatchString
      fieldPath: "status.atProvider.status"
      matchString: "RUNNING"

  - name: gkenode
    base:
      apiVersion: container.gcp.crossplane.io/v1beta1
      kind: NodePool
      spec:
        forProvider:
          clusterSelector:
            matchControllerRef: true
          config:
            oauthScopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/devstorage.read_only
            - https://www.googleapis.com/auth/logging.write
            - https://www.googleapis.com/auth/monitoring
            - https://www.googleapis.com/auth/compute
            - https://www.googleapis.com/auth/servicecontrol
            - https://www.googleapis.com/auth/service.management.readonly
            - https://www.googleapis.com/auth/trace.append
            shieldedInstanceConfig:
              enableIntegrityMonitoring: true
              enableSecureBoot: true
          autoscaling:
            autoprovisioned: false
            enabled: true
            maxNodeCount: 10
          management:
            autoRepair: true
            autoUpgrade: false
        providerConfigRef:
          name: gcp-xp-provider
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "ng0%s"
    - fromFieldPath: spec.parameters.nodeCount
      toFieldPath: spec.forProvider.autoscaling.minNodeCount
    - fromFieldPath: spec.parameters.nodeCount
      toFieldPath: spec.forProvider.initialNodeCount
    - fromFieldPath: spec.parameters.nodeSize
      toFieldPath: spec.forProvider.config.machineType
      transforms:
      - type: map
        map:
          small: e2-standard-2
          medium: e2-standard-4
          large: e2-standard-16
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.nodePoolStatus
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: RUNNING

  - name: kubernetes
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      spec:
        credentials:
          source: Secret
          secretRef:
            key: kubeconfig
        identity:
          type: GoogleApplicationCredentials
          source: Secret
          secretRef:
            namespace: crossplane-system
            name: gcp-account-creds
            key: credentials
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.credentials.secretRef.namespace
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.identity.secretRef.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.credentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-gkecluster"
    readinessChecks:
      - type: None
  - name: k8s-ns-xp
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: crossplane-system
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-ns-xp"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name

  - name: helm
    base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
          identity:
            type: GoogleApplicationCredentials
            source: Secret
            secretRef:
              name: gcp-account-creds
              key: credentials
    patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
      - fromFieldPath: spec.writeConnectionSecretToRef.namespace
        toFieldPath: spec.credentials.secretRef.namespace
      - fromFieldPath: spec.writeConnectionSecretToRef.namespace
        toFieldPath: spec.identity.secretRef.namespace
      - fromFieldPath: spec.id
        toFieldPath: spec.credentials.secretRef.name
        transforms:
          - type: string
            string:
              fmt: "%s-gkecluster"
    readinessChecks:
      - type: None
  - name: helm-xp
    base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: crossplane-system
            chart:
              name: crossplane
              repository: https://charts.crossplane.io/stable
              version: "1.10.1"
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
        - type: string
          string:
            fmt: "%s-crossplane"
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
