apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: gke
  labels:
    crossplane.io/xrd: xmanagedclusters.compositions.io
    provider: gcp
    cluster: gke
spec:
  compositeTypeRef:
    apiVersion: compositions.io/v1alpha1
    kind: XManagedCluster
  writeConnectionSecretsToNamespace: upbound-system
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: compute-net
    base: 
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Network
      spec:
        forProvider:
          autoCreateSubnetworks: false
          routingConfig:
            routingMode: REGIONAL
        providerConfigRef:
          name: gcp-provider 
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
  - name: compute-subnet
    base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Subnetwork
      spec:
        forProvider:
          region: us-west2
          networkSelector:
            matchControllerRef: true
          privateIpGoogleAccess: true
          ipCidrRange: 172.16.0.0/16
          secondaryIpRanges:
          - rangeName: pods
            ipCidrRange: 10.200.0.0/14
          - rangeName: services
            ipCidrRange: 10.204.0.0/16      
        providerConfigRef:
          name: gcp-provider
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
  - name: gkecluster-uw2
    base:
      apiVersion: container.gcp.crossplane.io/v1beta2
      kind: Cluster
      metadata:
        labels:
          fargateProfile: "NOT-APPLICABLE"
      spec:
        forProvider:
          location: us-west2
          addonsConfig:
            gcePersistentDiskCsiDriverConfig:
              enabled: true
            networkPolicyConfig:
              disabled: false
          ipAllocationPolicy:
            clusterSecondaryRangeName: pods
            createSubnetwork: false
            servicesSecondaryRangeName: services
            useIpAliases: true
          loggingService: logging.googleapis.com/kubernetes
          masterAuth:
            username:
          masterAuthorizedNetworksConfig:
            enabled: false  
          monitoringService: monitoring.googleapis.com/kubernetes
          networkPolicy:
            enabled: true
          networkSelector:
            matchControllerRef: true 
          networkConfig:
            enableIntraNodeVisibility: true  
          subnetworkSelector:
            matchControllerRef: true 
        writeConnectionSecretToRef:
          namespace: upbound-system
        providerConfigRef:
          name: gcp-provider        
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: status.clusterName     
    - fromFieldPath: spec.parameters.version
      toFieldPath: spec.forProvider.initialClusterVersion
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-gkecluster"    
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.controlPlaneStatus
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: status.fargateProfileStatus
      transforms:
      - type: string
        string:
          fmt: "NA4-%s"   
    connectionDetails:
    - fromConnectionSecretKey: kubeconfig  
    readinessChecks:
    - type: MatchString
      fieldPath: "status.atProvider.status"
      matchString: "RUNNING"

  - name: gkenode-uw2
    base:
      apiVersion: container.gcp.crossplane.io/v1beta1
      kind: NodePool
      spec:
        forProvider:
          locations:
          - us-west2-a
          - us-west2-b
          - us-west2-c
          clusterSelector:
            matchControllerRef: true
          config:
            oauthScopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/devstorage.read_only
            - https://www.googleapis.com/auth/logging.write
            - https://www.googleapis.com/auth/monitoring
            - https://www.googleapis.com/auth/compute
            shieldedInstanceConfig:
              enableIntegrityMonitoring: true
              enableSecureBoot: true
          autoscaling:
            enabled: true
            maxNodeCount: 5
          management:
            autoRepair: true
            autoUpgrade: false
        providerConfigRef:
          name: gcp-provider
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
    - fromFieldPath: spec.parameters.nodeCount
      toFieldPath: spec.forProvider.autoscaling.minNodeCount
    - fromFieldPath: spec.parameters.nodeCount
      toFieldPath: spec.forProvider.initialNodeCount  
    - fromFieldPath: spec.parameters.nodeSize
      toFieldPath: spec.forProvider.config.machineType
      transforms:
      - type: map
        map:
          small: e2-standard-2
          medium: e2-standard-4
          large: e2-standard-16      
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.nodePoolStatus
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: RUNNING
  